{"version":3,"sources":["context/AuthContext.js","components/authStyles.js","components/Login.js","components/Signup.js","components/Dashboard.js","components/ConversationPage.js","components/PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","AuthProvider","_ref","children","user","setUser","useState","loading","setLoading","useEffect","token","localStorage","getItem","axios","defaults","headers","common","React","createElement","Provider","value","login","async","email","password","setItem","error","console","signup","name","post","logout","removeItem","useAuth","useContext","authStyles","pageContainer","minHeight","background","display","alignItems","justifyContent","direction","padding","cardContainer","width","maxWidth","card","borderRadius","boxShadow","border","backgroundColor","cardContent","button","fontSize","transition","fontWeight","margin","color","input","boxSizing","title","marginBottom","subtitle","link","textDecoration","formGroup","textAlign","formLabel","checkboxContainer","flexDirection","gap","forgotPassword","registerText","marginTop","Login","setEmail","setPassword","rememberMe","setRememberMe","setError","navigate","useNavigate","className","style","Card","Body","Alert","variant","Form","onSubmit","e","preventDefault","noValidate","Group","Label","Control","type","onChange","target","required","autoFocus","Check","id","checked","label","href","Button","disabled","Link","to","Signup","formData","setFormData","confirmPassword","handleChange","styleElement","document","innerText","customStyles","head","appendChild","initialMessages","friendsData","status","avatar","lastSeen","requestStatus","groupsData","members","Dashboard","activeNav","setActiveNav","sidebarCollapsed","setSidebarCollapsed","isMobile","setIsMobile","messages","setMessages","newMessage","setNewMessage","showSpeechToText","setShowSpeechToText","showTextToSpeech","setShowTextToSpeech","transcribedText","setTranscribedText","textToSpeak","setTextToSpeak","isListening","setIsListening","audioBlob","setAudioBlob","audioUrl","setAudioUrl","showFriends","setShowFriends","showNotifications","setShowNotifications","showConversationModal","setShowConversationModal","selectedFriend","setSelectedFriend","showToast","setShowToast","toastMessage","setToastMessage","showCreateGroupModal","setShowCreateGroupModal","newGroupName","setNewGroupName","selectedMembers","setSelectedMembers","groups","setGroups","friends","setFriends","buttonHover","setButtonHover","isConverting","setIsConverting","selectedVoice","setSelectedVoice","customPrompt","setCustomPrompt","isProcessing","setIsProcessing","audioRef","useRef","mediaRecorderRef","recognitionRef","chunksRef","textToSpeechAudioUrl","setTextToSpeechAudioUrl","speechToTextAudioUrl","setSpeechToTextAudioUrl","textToSpeechAudioBlob","setTextToSpeechAudioBlob","speechToTextAudioBlob","setSpeechToTextAudioBlob","textToSpeechAudioRef","speechToTextAudioRef","shouldAutoPlay","setShouldAutoPlay","isUploading","setIsUploading","isDownloading","setIsDownloading","sessionId","setSessionId","sessionPassword","setSessionPassword","displayName","setDisplayName","isJoining","setIsJoining","current","log","load","play","then","catch","handleResize","window","addEventListener","removeEventListener","handleLogout","handleSidebarToggle","newSidebarState","sidebarEl","querySelector","classList","remove","add","uploadAudio","FormData","append","response","fetch","method","body","ok","Error","result","json","message","downloadAudio","a","download","click","removeChild","Container","fluid","Row","ref","src","Col","xs","md","lg","position","top","right","height","zIndex","overflowY","transform","onClick","FaArrowRight","size","Nav","FaHome","FaMicrophone","FaVolumeUp","FaComments","FaUserFriends","FaHistory","FaCog","FaSignOutAlt","marginRight","Navbar","bg","expand","FaArrowLeft","Brand","Dropdown","align","Toggle","alt","marginLeft","objectFit","Menu","Item","FaUser","Divider","Header","Text","as","rows","placeholder","length","Select","defaultValue","Subtitle","controls","trim","directApiUrl","URLSearchParams","prompt","voice","format","toString","corsProxyUrl","apiUrl","encodeURIComponent","contentType","get","includes","responseData","Object","keys","generation","generationId","audio","base64Data","base64","split","binaryString","atob","bytes","Uint8Array","i","charCodeAt","Blob","buffer","URL","createObjectURL","blob","setTimeout","speech","SpeechSynthesisUtterance","text","lang","speechSynthesis","speak","Fragment","role","aria-hidden","FaSave","Footer","FaInfoCircle","toggleListening","stop","state","stream","getTracks","forEach","track","start","navigator","mediaDevices","getUserMedia","mediaRecorder","MediaRecorder","mimeType","ondataavailable","data","push","onstop","Title","FaDownload","FaKeyboard","clipboard","writeText","FaCopy","FaTrash","readOnly","Heading","ListGroup","FaSearch","Badge","tabIndex","aria-disabled","InputGroup","aria-label","FaPlus","FaSignInAlt","sessionData","joinedAt","Date","toISOString","JSON","stringify","session","ToastContainer","Toast","show","onClose","delay","autohide","closeButton","ConversationPage","conversationId","useParams","conversation","setConversation","messageInput","setMessageInput","sending","setSending","userId","isPublic","err","fetchConversation","map","index","key","sender","content","timestamp","toLocaleString","senderId","prev","PrivateRoute","Navigate","App","Router","Routes","Route","path","element","Conversation","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.1eb2b618.chunk.js","sourcesContent":["// src/context/AuthContext.js\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst AuthContext = createContext();\n\nexport function AuthProvider({ children }) {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // بررسی وجود توکن در localStorage هنگام لود اولیه\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setUser({ token });\n    }\n    setLoading(false);\n  }, []);\n\n  // ورود کاربر\n  const login = async (email, password) => {\n    try {\n      //const response = await axios.post('http://localhost:8000/api/login/', { email, password });\n      //const { token } = response.data;\n      const { token } = \"1234\";\n      localStorage.setItem('token', token);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setUser({ token });\n      return true;\n    } catch (error) {\n      console.error('ورود ناموفق:', error);\n      return false;\n    }\n  };\n  \n  // ثبت‌نام کاربر\n  const signup = async (name, email, password) => {\n    try {\n      await axios.post('http://localhost:8000/api/signup/', { name, email, password });\n      return true;\n    } catch (error) {\n      console.error('ثبت‌نام ناموفق:', error);\n      return false;\n    }\n  };\n\n  // خروج کاربر\n  const logout = () => {\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization'];\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, signup, logout, loading }}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n\nexport const useAuth = () => useContext(AuthContext);","// Updated authStyles object with fixed input styling\nexport const authStyles = {\n  pageContainer: {\n    minHeight: '100vh',\n    background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    direction: 'rtl', // RTL support for Persian\n    padding: '2rem'\n  },\n  cardContainer: {\n    width: '100%',\n    maxWidth: '400px'\n  },\n  card: {\n    width: '100%',\n    borderRadius: '15px',\n    boxShadow: '0 10px 30px rgba(0,0,0,0.2)',\n    border: 'none',\n    backgroundColor: '#ffffff' // Explicitly set white background\n  },\n  cardContent: {\n    padding: '2rem'\n  },\n  button: {\n    borderRadius: '8px',\n    background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n    border: 'none',\n    fontSize: '1rem',\n    padding: '0.75rem',\n    transition: 'all 0.3s ease',\n    boxShadow: '0 4px 6px rgba(102, 126, 234, 0.25)',\n    fontWeight: '500',\n    display: 'block',\n    margin: '0 auto',\n    color: \"#fff\",\n    width: '100%',\n    maxWidth: '250px'\n  },\n  input: {\n    borderRadius: '8px',\n    padding: '0.75rem 1rem',\n    border: '1px solid #e2e8f0',\n    fontSize: '1rem',\n    transition: 'all 0.3s ease',\n    boxShadow: '0 2px 4px rgba(0,0,0,0.05)',\n    backgroundColor: '#f8fafc',\n    width: '100%',\n    boxSizing: 'border-box',\n    display: 'block'\n  },\n  title: {\n    color: '#2d3748',\n    fontWeight: '600',\n    fontSize: '1.75rem',\n    marginBottom: '0.5rem'\n  },\n  subtitle: {\n    color: '#718096',\n    marginBottom: '1.5rem',\n    fontSize: '1rem'\n  },\n  link: {\n    color: '#667eea',\n    textDecoration: 'none',\n    fontWeight: '500',\n    transition: 'color 0.2s ease'\n  },\n  formGroup: {\n    marginBottom: '1.25rem',\n    textAlign: 'right',\n    width: '100%'\n  },\n  formLabel: {\n    fontWeight: '500',\n    marginBottom: '0.5rem',\n    color: '#4a5568',\n    display: 'block'\n  },\n  checkboxContainer: {\n    marginBottom: '1.5rem',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    gap: '0.75rem',\n    width: '100%'\n  },\n  forgotPassword: {\n    color: '#667eea',\n    fontSize: '0.875rem',\n    textAlign: 'center',\n    display: 'block'\n  },\n  registerText: {\n    textAlign: 'center',\n    marginTop: '1.5rem',\n    color: '#718096'\n  }\n};","import React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { Button, Form, Alert, Card } from 'react-bootstrap';\nimport { authStyles } from './authStyles'; // Make sure to import from the correct file\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [rememberMe, setRememberMe] = useState(false);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  \n  const { login } = useAuth();\n  const navigate = useNavigate();\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n    \n    try {\n      const success = await login(email, password, rememberMe);\n      if (success) navigate('/');\n    } catch (error) {\n      setError('ایمیل یا رمز عبور اشتباه است!');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"login-page\" style={authStyles.pageContainer}>\n      <div style={authStyles.cardContainer}>\n        <Card style={authStyles.card}>\n          <Card.Body style={authStyles.cardContent}>\n            <div style={{ textAlign: 'center' }}>\n              <h2 style={authStyles.title}>خوش آمدید</h2>\n              <p style={authStyles.subtitle}>لطفا وارد حساب کاربری خود شوید</p>\n            </div>\n            \n            {error && (\n              <Alert \n                variant=\"danger\" \n                className=\"text-center mb-4\"\n                style={{ borderRadius: '8px' }}\n              >\n                {error}\n              </Alert>\n            )}\n            \n            <Form onSubmit={handleSubmit} noValidate>\n              <Form.Group style={authStyles.formGroup}>\n                <Form.Label style={authStyles.formLabel}>ایمیل</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  required\n                  style={authStyles.input}\n                  autoFocus\n                />\n              </Form.Group>\n              \n              <Form.Group style={authStyles.formGroup}>\n                <Form.Label style={authStyles.formLabel}>رمز عبور</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  required\n                  style={authStyles.input}\n                />\n              </Form.Group>\n              \n              <div style={authStyles.checkboxContainer}>\n                <Form.Check\n                  type=\"checkbox\"\n                  id=\"rememberMe\"\n                  checked={rememberMe}\n                  onChange={(e) => setRememberMe(e.target.checked)}\n                  label=\"مرا به خاطر بسپار\"\n                  style={{ fontSize: '0.875rem' }}\n                />\n                <a href=\"/forgot-password\" style={authStyles.forgotPassword}>\n                  فراموشی رمز عبور؟\n                </a>\n              </div>\n              \n              <Button\n                variant=\"primary\"\n                type=\"submit\"\n                style={authStyles.button}\n                disabled={loading}\n              >\n                {loading ? 'لطفا صبر کنید...' : 'ورود'}\n              </Button>\n              \n              <p style={authStyles.registerText}>\n                حساب کاربری ندارید؟{' '}\n                <Link to=\"/signup\" style={authStyles.link}>\n                  ایجاد حساب\n                </Link>\n              </p>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;","// src/components/Signup.js\nimport React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { Button, Form, Alert, Card } from 'react-bootstrap';\nimport { authStyles } from './authStyles'; // Make sure to import from the correct file\n\nconst Signup = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  \n  const { signup } = useAuth();\n  const navigate = useNavigate();\n  \n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    \n    // Validate passwords match\n    if (formData.password !== formData.confirmPassword) {\n      setError('رمز عبور و تکرار آن مطابقت ندارند!');\n      return;\n    }\n    \n    setLoading(true);\n    \n    try {\n      const success = await signup(formData.name, formData.email, formData.password);\n      if (success) {\n        navigate('/login');\n      } else {\n        setError('ثبت‌نام ناموفق! لطفاً دوباره تلاش کنید.');\n      }\n    } catch (error) {\n      setError('خطا در ایجاد حساب کاربری');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"signup-page\" style={authStyles.pageContainer}>\n      <div style={authStyles.cardContainer}>\n        <Card style={authStyles.card}>\n          <Card.Body style={authStyles.cardContent}>\n            <div style={{ textAlign: 'center' }}>\n              <h2 style={authStyles.title}>ایجاد حساب کاربری</h2>\n              <p style={authStyles.subtitle}>برای عضویت اطلاعات زیر را وارد کنید</p>\n            </div>\n            \n            {error && (\n              <Alert \n                variant=\"danger\" \n                className=\"text-center mb-4\"\n                style={{ borderRadius: '8px' }}\n              >\n                {error}\n              </Alert>\n            )}\n            \n            <Form onSubmit={handleSubmit} noValidate>\n              <Form.Group style={authStyles.formGroup}>\n                <Form.Label style={authStyles.formLabel}>نام</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"name\"\n                  value={formData.name}\n                  onChange={handleChange}\n                  required\n                  style={authStyles.input}\n                  autoFocus\n                />\n              </Form.Group>\n              \n              <Form.Group style={authStyles.formGroup}>\n                <Form.Label style={authStyles.formLabel}>ایمیل</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  name=\"email\"\n                  value={formData.email}\n                  onChange={handleChange}\n                  required\n                  style={authStyles.input}\n                />\n              </Form.Group>\n              \n              <Form.Group style={authStyles.formGroup}>\n                <Form.Label style={authStyles.formLabel}>رمز عبور</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  name=\"password\"\n                  value={formData.password}\n                  onChange={handleChange}\n                  required\n                  style={authStyles.input}\n                />\n              </Form.Group>\n              \n              <Form.Group style={authStyles.formGroup}>\n                <Form.Label style={authStyles.formLabel}>تکرار رمز عبور</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  name=\"confirmPassword\"\n                  value={formData.confirmPassword}\n                  onChange={handleChange}\n                  required\n                  style={authStyles.input}\n                />\n              </Form.Group>\n              \n              <Button\n                variant=\"primary\"\n                type=\"submit\"\n                className=\"w-100 mt-2\"\n                style={authStyles.button}\n                disabled={loading}\n              >\n                {loading ? 'لطفا صبر کنید...' : 'ثبت‌نام'}\n              </Button>\n              \n              <p style={authStyles.registerText}>\n                قبلا ثبت‌نام کرده‌اید؟{' '}\n                <Link to=\"/login\" style={authStyles.link}>\n                  ورود به حساب\n                </Link>\n              </p>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default Signup;","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { \n  Container, Row, Col, Card, Button, \n  Nav, Navbar, Dropdown, Badge, Form, InputGroup,\n  Modal, ListGroup, Toast, ToastContainer,\n  Accordion, Alert, ProgressBar\n} from 'react-bootstrap';\nimport { \n  FaHome, FaUsers, FaCog, FaBell, FaEnvelope, \n  FaUser, FaSignOutAlt, FaSearch, FaComments, \n  FaMicrophone, FaKeyboard, FaVolumeUp, FaPlus,\n  FaUserFriends, FaHistory, FaHeadset, FaEllipsisH,\n  FaPhoneAlt, FaVideo, FaEllipsisV, FaPaperclip,\n  FaPaperPlane, FaLock, FaPalette, FaLanguage,\n  FaCaretDown, FaInfoCircle, FaSave, FaArrowRight, FaArrowLeft, FaTimes, FaBars, FaUpload, FaCopy, FaTrash, FaDownload, FaUserPlus, FaUserTimes, FaSignInAlt\n} from 'react-icons/fa';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Custom CSS for styling the Bootstrap components\nconst customStyles = `\n  /* RTL support */\n  body {\n    direction: rtl;\n    text-align: right;\n  }\n\n  /* Sidebar styling */\n  .sidebar {\n    background-image: linear-gradient(145deg, #ffffff, #fafbff);\n    box-shadow: 0 0 15px rgba(0, 0, 0, 0.05);\n    border-left: 1px solid rgba(229, 231, 235, 0.5);\n    transition: all 0.3s ease-in-out;\n  }\n\n  .sidebar-header {\n    background: linear-gradient(to right, #f8f9ff, #ffffff);\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.02);\n  }\n\n  .sidebar-collapsed {\n    width: 80px !important;\n  }\n\n  .nav-link {\n    color: #5a6171;\n    transition: all 0.3s ease;\n    border-radius: 0;\n    position: relative;\n    overflow: hidden;\n    margin-bottom: 2px;\n  }\n\n  .nav-link.active {\n    background-color: #f0f4ff !important;\n    color: #3f51b5 !important;\n    font-weight: bold;\n  }\n\n  /* Pulse animation for recording */\n  .pulse-animation {\n    animation: pulse 1.5s infinite;\n  }\n\n  @keyframes pulse {\n    0% {\n      transform: scale(0.95);\n      box-shadow: 0 0 0 0 rgba(220, 53, 69, 0.7);\n    }\n    \n    70% {\n      transform: scale(1);\n      box-shadow: 0 0 0 10px rgba(220, 53, 69, 0);\n    }\n    \n    100% {\n      transform: scale(0.95);\n      box-shadow: 0 0 0 0 rgba(220, 53, 69, 0);\n    }\n  }\n\n  /* Card styling */\n  .card {\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n    border-radius: 10px;\n    overflow: hidden;\n    border: none;\n    transition: transform 0.2s ease, box-shadow 0.2s ease;\n  }\n\n  .card:hover {\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);\n    transform: translateY(-2px);\n  }\n\n  /* Button styling */\n  .btn {\n    border-radius: 5px;\n    padding: 0.5rem 1rem;\n    font-weight: 500;\n    transition: all 0.2s ease;\n  }\n\n  .btn-primary {\n    background-color: #3f51b5;\n    border-color: #3f51b5;\n  }\n\n  .btn-primary:hover {\n    background-color: #303f9f;\n    border-color: #303f9f;\n    transform: translateY(-1px);\n    box-shadow: 0 4px 8px rgba(63, 81, 181, 0.15);\n  }\n\n  .btn-info {\n    background-color: #2196f3;\n    border-color: #2196f3;\n  }\n\n  .btn-info:hover {\n    background-color: #1976d2;\n    border-color: #1976d2;\n    transform: translateY(-1px);\n    box-shadow: 0 4px 8px rgba(33, 150, 243, 0.15);\n  }\n\n  /* Form control styling */\n  .form-control {\n    border-radius: 5px;\n    padding: 0.75rem 1rem;\n    border: 1px solid #e0e0e0;\n    transition: all 0.2s ease;\n  }\n\n  .form-control:focus {\n    border-color: #3f51b5;\n    box-shadow: 0 0 0 0.25rem rgba(63, 81, 181, 0.25);\n  }\n\n  /* Badge styling */\n  .badge {\n    padding: 0.5em 0.75em;\n    font-weight: normal;\n    border-radius: 30px;\n  }\n  \n  /* Responsive improvements */\n  @media (max-width: 768px) {\n    .card-body {\n      padding: 1rem !important;\n    }\n    \n    .btn {\n      width: 100%;\n      margin-bottom: 0.5rem;\n    }\n    \n    .sidebar {\n      width: 100% !important;\n      z-index: 1050;\n    }\n  }\n  \n  /* Toast improvements */\n  .toast {\n    border-radius: 10px;\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n  }\n  \n  /* Improved navbar */\n  .navbar {\n    backdrop-filter: blur(10px);\n    -webkit-backdrop-filter: blur(10px);\n  }\n  \n  /* Improved cards */\n  .card-header {\n    border-bottom: none;\n    padding: 1.25rem 1.5rem;\n  }\n  \n  .card-body {\n    padding: 1.5rem;\n  }\n  \n  .card-footer {\n    background-color: transparent;\n    border-top: 1px solid rgba(0, 0, 0, 0.05);\n    padding: 1.25rem 1.5rem;\n  }\n`;\n\n// Add the styles to the document\nconst styleElement = document.createElement('style');\nstyleElement.innerText = customStyles + `\n  /* Additional custom styles */\n  .bg-light-primary {\n    background-color: rgba(63, 81, 181, 0.15);\n  }\n  \n  .bg-light-info {\n    background-color: rgba(33, 150, 243, 0.15);\n  }\n  \n  .bg-light-success {\n    background-color: rgba(76, 175, 80, 0.15);\n  }\n  \n  .bg-light-warning {\n    background-color: rgba(255, 193, 7, 0.15);\n  }\n  \n  .bg-light-danger {\n    background-color: rgba(244, 67, 54, 0.15);\n  }\n  \n  /* Improved responsive padding */\n  @media (max-width: 576px) {\n    .card-body {\n      padding: 1rem !important;\n    }\n    \n    .p-4 {\n      padding: 1rem !important;\n    }\n    \n    .px-4 {\n      padding-left: 1rem !important;\n      padding-right: 1rem !important;\n    }\n    \n    .py-4 {\n      padding-top: 1rem !important;\n      padding-bottom: 1rem !important;\n    }\n  }\n  \n  /* Fix for RTL layout in mobile view */\n  @media (max-width: 992px) {\n    .sidebar {\n      transform: translateX(100%);\n      right: 0;\n      left: auto;\n    }\n    \n    .sidebar.show {\n      transform: translateX(0);\n    }\n  }\n  \n  /* Table responsive improvements */\n  .table-responsive {\n    overflow-x: auto;\n    -webkit-overflow-scrolling: touch;\n  }\n  \n  /* Toast position fix for RTL */\n  .toast-container {\n    z-index: 1060;\n  }\n  \n  /* Button improvements */\n  .btn-icon {\n    width: 36px;\n    height: 36px;\n    padding: 0;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 6px;\n  }\n`;\ndocument.head.appendChild(styleElement);\n\nconst dashboardStyles = {\n  // Main layout\n  pageContainer: {\n    display: 'flex',\n    minHeight: '100vh',\n    backgroundColor: '#f5f7fa',\n    direction: 'rtl',\n    textAlign: 'right',\n    position: 'relative',\n    overflow: 'hidden'\n  },\n  \n  // Sidebar\n  sidebar: {\n    width: '228px',\n    backgroundColor: '#ffffff',\n    boxShadow: '0 0 15px rgba(0, 0, 0, 0.05)',\n    position: 'fixed',\n    height: '100vh',\n    right: 0,\n    padding: '0',\n    zIndex: 1030,\n    transition: 'all 0.3s ease-in-out',\n    borderLeft: '1px solid rgba(229, 231, 235, 0.5)',\n    backgroundImage: 'linear-gradient(145deg, #ffffff, #fafbff)',\n    overflowX: 'hidden',\n    overflowY: 'auto'\n  },\n  \n  sidebarCollapsed: {\n    width: '80px',\n    overflow: 'hidden'\n  },\n  \n  sidebarHeader: {\n    padding: '20px',\n    borderBottom: '1px solid #eaeaea',\n    background: 'linear-gradient(to right, #f8f9ff, #ffffff)',\n    boxShadow: '0 2px 5px rgba(0, 0, 0, 0.02)',\n    position: 'relative'\n  },\n  \n  logo: {\n    fontSize: '1.5rem',\n    fontWeight: 'bold',\n    color: '#3f51b5',\n    marginBottom: '0',\n    whiteSpace: 'nowrap',\n    textShadow: '0px 1px 1px rgba(0, 0, 0, 0.1)'\n  },\n  \n  logoSmall: {\n    fontSize: '1.5rem',\n    fontWeight: 'bold',\n    color: '#3f51b5',\n    marginBottom: '0',\n    textAlign: 'center',\n    textShadow: '0px 1px 1px rgba(0, 0, 0, 0.1)'\n  },\n  \n  navLink: {\n    padding: '14px 20px',\n    color: '#5a6171',\n    fontSize: '0.95rem',\n    display: 'flex',\n    alignItems: 'center',\n    borderRadius: '0',\n    transition: 'all 0.3s ease',\n    whiteSpace: 'nowrap',\n    position: 'relative',\n    overflow: 'hidden',\n    marginBottom: '2px',\n    textDecoration: 'none',\n    border: 'none'\n  },\n  \n  navLinkCollapsed: {\n    padding: '12px',\n    justifyContent: 'center'\n  },\n  \n  navLinkActive: {\n    backgroundColor: '#f0f4ff',\n    color: '#3f51b5',\n    borderRight: '4px solid #3f51b5',\n    fontWeight: 'bold',\n    textDecoration: 'none'\n  },\n  \n  navIcon: {\n    marginLeft: '16px',\n    fontSize: '1.1rem',\n    transition: 'transform 0.2s ease'\n  },\n  \n  navCategory: {\n    fontSize: '0.8rem',\n    color: '#9ca3af',\n    fontWeight: 'bold',\n    padding: '20px 20px 10px',\n    textTransform: 'uppercase',\n    whiteSpace: 'nowrap',\n    letterSpacing: '0.5px'\n  },\n  \n  // Content area\n  mainContent: {\n    marginRight: '248px',\n    width: 'calc(100% - 248px)',\n    transition: 'all 0.3s ease',\n    padding: '20px',\n    minHeight: '100vh'\n  },\n  \n  mainContentExpanded: {\n    marginRight: '70px',\n    width: 'calc(100% - 70px)'\n  },\n  \n  // Top navbar\n  topNav: {\n    backgroundColor: '#ffffff',\n    borderBottom: '1px solid #eaeaea',\n    padding: '10px 25px',\n    boxShadow: '0 2px 5px rgba(0, 0, 0, 0.05)'\n  },\n  \n  searchBar: {\n    maxWidth: '400px'\n  },\n  \n  searchInput: {\n    backgroundColor: '#f5f7fa',\n    border: 'none',\n    boxShadow: 'none',\n    borderRadius: '50px',\n    padding: '10px 20px'\n  },\n  \n  navbarToggler: {\n    border: 'none',\n    backgroundColor: 'transparent',\n    padding: '8px'\n  },\n  \n  iconButton: {\n    color: '#555',\n    fontSize: '1.1rem',\n    margin: '0 5px',\n    padding: '8px 10px',\n    borderRadius: '50%',\n    backgroundColor: 'transparent',\n    transition: 'all 0.3s ease',\n    position: 'relative'\n  },\n  \n  userDropdown: {\n    display: 'flex',\n    alignItems: 'center',\n    cursor: 'pointer',\n    padding: '5px 10px',\n    borderRadius: '5px',\n    transition: 'all 0.3s ease'\n  },\n  \n  avatar: {\n    width: '38px',\n    height: '38px',\n    borderRadius: '50%',\n    objectFit: 'cover',\n    marginLeft: '10px',\n    border: '2px solid #eaeaea'\n  },\n  \n  userName: {\n    margin: '0',\n    fontSize: '0.9rem',\n    fontWeight: '600'\n  },\n  \n  userRole: {\n    margin: '0',\n    fontSize: '0.75rem',\n    color: '#888'\n  },\n  \n  // Dashboard content\n  contentWrapper: {\n    padding: '25px'\n  },\n  \n  pageTitle: {\n    fontSize: '1.75rem',\n    fontWeight: 'bold',\n    marginBottom: '20px',\n    color: '#333'\n  },\n  \n  cardDashboard: {\n    boxShadow: '0 2px 8px rgba(0, 0, 0, 0.05)',\n    borderRadius: '10px',\n    border: 'none',\n    marginBottom: '25px',\n    overflow: 'hidden'\n  },\n  \n  cardHeader: {\n    backgroundColor: '#ffffff',\n    borderBottom: '1px solid #f0f0f0',\n    padding: '15px 20px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  \n  cardTitle: {\n    fontWeight: '600',\n    margin: '0',\n    fontSize: '1.1rem'\n  },\n  \n  // Conversion tools\n  conversionTools: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '20px'\n  },\n  \n  toolButton: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '15px',\n    margin: '10px 0',\n    borderRadius: '10px',\n    backgroundColor: '#f0f4ff',\n    border: 'none',\n    color: '#3f51b5',\n    fontWeight: '600',\n    fontSize: '1rem',\n    transition: 'all 0.3s ease'\n  },\n  \n  toolIcon: {\n    fontSize: '1.5rem',\n    marginLeft: '10px'\n  },\n  \n  // Conversation area\n  messageArea: {\n    height: '300px',\n    overflowY: 'auto',\n    padding: '15px',\n    backgroundColor: '#f9f9f9',\n    borderRadius: '10px',\n    marginBottom: '15px'\n  },\n  \n  message: {\n    padding: '10px 15px',\n    borderRadius: '10px',\n    marginBottom: '10px',\n    maxWidth: '80%',\n    wordWrap: 'break-word'\n  },\n  \n  incomingMessage: {\n    backgroundColor: '#ffffff',\n    boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)',\n    marginRight: 'auto'\n  },\n  \n  outgoingMessage: {\n    backgroundColor: '#e3f2fd',\n    boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)',\n    marginLeft: 'auto'\n  },\n  \n  messageInput: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  \n  inputField: {\n    borderRadius: '50px',\n    padding: '10px 20px',\n    border: '1px solid #eaeaea',\n    flexGrow: 1,\n    marginLeft: '10px'\n  },\n  \n  sendButton: {\n    borderRadius: '50%',\n    width: '45px',\n    height: '45px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#3f51b5',\n    border: 'none'\n  },\n  \n  // Friends list\n  friendItem: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '12px 15px',\n    borderBottom: '1px solid #f0f0f0',\n    transition: 'all 0.3s ease'\n  },\n  \n  friendAvatar: {\n    width: '45px',\n    height: '45px',\n    borderRadius: '50%',\n    marginLeft: '15px'\n  },\n  \n  friendName: {\n    fontWeight: '600',\n    margin: '0',\n    fontSize: '0.95rem'\n  },\n  \n  friendStatus: {\n    fontSize: '0.8rem',\n    color: '#888',\n    margin: '0'\n  },\n  \n  onlineIndicator: {\n    width: '10px',\n    height: '10px',\n    borderRadius: '50%',\n    backgroundColor: '#4caf50',\n    display: 'inline-block',\n    marginLeft: '5px'\n  },\n  \n  // Notification styles\n  notificationItem: {\n    padding: '12px 15px',\n    borderBottom: '1px solid #f0f0f0'\n  },\n  \n  // Responsive\n  '@media (max-width: 992px)': {\n    sidebar: {\n      transform: 'translateX(260px)'\n    },\n    sidebarOpen: {\n      transform: 'translateX(0)'\n    },\n    mainContent: {\n      marginRight: '0',\n      width: '100%'\n    }\n  },\n  \n  // Footer styles\n  footer: {\n    backgroundColor: '#f8f9fa',\n    borderTop: '1px solid #e9ecef',\n    padding: '10px 15px',\n    position: 'fixed',\n    left: '0',\n    bottom: '0',\n    width: '250px',\n    textAlign: 'center',\n    zIndex: 900\n  },\n  \n  // Toggle button\n  toggleButton: {\n    position: 'fixed',\n    top: '1.5rem',\n    transform: 'none',\n    backgroundColor: '#ffffff',\n    borderRadius: '50%',\n    width: '40px',\n    height: '40px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    boxShadow: '0 2px 10px rgba(63, 81, 181, 0.15)',\n    cursor: 'pointer',\n    zIndex: 1050,\n    border: '1px solid #eaeaea',\n    transition: 'all 0.3s ease',\n    color: '#3f51b5',\n    opacity: 0.85\n  },\n  \n  toggleButtonInside: {\n    position: 'absolute',\n    top: '50%',\n    left: '20px',\n    transform: 'translateY(-50%)',\n    backgroundColor: '#ffffff',\n    borderRadius: '50%',\n    width: '32px',\n    height: '32px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    boxShadow: '0 2px 5px rgba(63, 81, 181, 0.15)',\n    cursor: 'pointer',\n    zIndex: 1050,\n    border: '1px solid #eaeaea',\n    transition: 'all 0.3s ease',\n    color: '#3f51b5',\n    opacity: 0.85\n  },\n  \n  toggleButtonMobile: {\n    top: '1rem',\n    right: '1rem',\n    position: 'fixed'\n  },\n  \n  toggleButtonHover: {\n    backgroundColor: '#f0f4ff',\n    opacity: 1,\n    boxShadow: '0 2px 12px rgba(63, 81, 181, 0.25)'\n  }\n};\n\n// Sample messages for the conversation\nconst initialMessages = [];\n\n// Sample friends data\nconst friendsData = [\n  { \n    id: 1, \n    name: 'سارا احمدی', \n    status: 'آنلاین', \n    avatar: 'https://randomuser.me/api/portraits/women/12.jpg', \n    lastSeen: 'هم اکنون',\n    requestStatus: 'accepted' // existing friend\n  },\n  { \n    id: 2, \n    name: 'امیر حسینی', \n    status: 'آفلاین', \n    avatar: 'https://randomuser.me/api/portraits/men/22.jpg', \n    lastSeen: '۱ ساعت پیش',\n    requestStatus: 'pending_outgoing' // request sent by user\n  },\n  { \n    id: 3, \n    name: 'مریم کریمی', \n    status: 'آنلاین', \n    avatar: 'https://randomuser.me/api/portraits/women/32.jpg', \n    lastSeen: 'هم اکنون',\n    requestStatus: 'pending_incoming' // request received\n  },\n  { id: 4, name: 'علی محمدی', status: 'مشغول', avatar: 'https://randomuser.me/api/portraits/men/42.jpg', lastSeen: '۳۰ دقیقه پیش' },\n  { id: 5, name: 'نیلوفر رضایی', status: 'آنلاین', avatar: 'https://randomuser.me/api/portraits/women/52.jpg', lastSeen: 'هم اکنون' },\n];\n\n// Sample notifications data\nconst notificationsData = [\n  { id: 1, text: 'سارا احمدی شما را به گروه \"دوستان دانشگاه\" دعوت کرد', time: '۱۰ دقیقه پیش' },\n  { id: 2, text: 'امیر حسینی به پیام شما پاسخ داد', time: '۱ ساعت پیش' },\n  { id: 3, text: 'یادآوری: جلسه آنلاین ساعت ۱۸:۰۰', time: '۲ ساعت پیش' },\n];\n\n// Sample recent conversations\nconst recentConversations = [\n  { id: 1, name: 'سارا احمدی', lastMessage: 'سلام، حالت چطوره؟', time: '۱۰ دقیقه پیش', unread: 2, avatar: 'https://randomuser.me/api/portraits/women/12.jpg' },\n  { id: 2, name: 'امیر حسینی', lastMessage: 'پروژه رو تموم کردی؟', time: '۲ ساعت پیش', unread: 0, avatar: 'https://randomuser.me/api/portraits/men/22.jpg' },\n  { id: 3, name: 'گروه دوستان دانشگاه', lastMessage: 'مریم: فردا کلاس ساعت چنده؟', time: 'دیروز', unread: 5, avatar: 'https://randomuser.me/api/portraits/women/90.jpg', isGroup: true },\n];\n\n// Sample group data\nconst groupsData = [\n  { id: 1, name: 'دوستان دانشگاه', members: [1, 2, 3], avatar: 'https://randomuser.me/api/portraits/women/90.jpg' },\n  { id: 2, name: 'همکاران پروژه', members: [2, 4, 5], avatar: 'https://randomuser.me/api/portraits/men/90.jpg' },\n];\n\nconst Dashboard = () => {\n  const { user, logout } = useAuth();\n  const navigate = useNavigate();\n  const [activeNav, setActiveNav] = useState('داشبورد');\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(true);\n  const [isMobile, setIsMobile] = useState(false);\n  const [messages, setMessages] = useState(initialMessages);\n  const [newMessage, setNewMessage] = useState('');\n  const [showSpeechToText, setShowSpeechToText] = useState(false);\n  const [showTextToSpeech, setShowTextToSpeech] = useState(false);\n  const [transcribedText, setTranscribedText] = useState('');\n  const [textToSpeak, setTextToSpeak] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [audioUrl, setAudioUrl] = useState('');\n  const [showFriends, setShowFriends] = useState(false);\n  const [showNotifications, setShowNotifications] = useState(false);\n  const [showConversationModal, setShowConversationModal] = useState(false);\n  const [selectedFriend, setSelectedFriend] = useState(null);\n  const [showToast, setShowToast] = useState(false);\n  const [toastMessage, setToastMessage] = useState('');\n  const [showCreateGroupModal, setShowCreateGroupModal] = useState(false);\n  const [newGroupName, setNewGroupName] = useState('');\n  const [selectedMembers, setSelectedMembers] = useState([]);\n  const [groups, setGroups] = useState(groupsData);\n  const [friends, setFriends] = useState(friendsData);\n  const [buttonHover, setButtonHover] = useState(false);\n  const [isConverting, setIsConverting] = useState(false);\n  const [selectedVoice, setSelectedVoice] = useState('coral');\n  const [customPrompt, setCustomPrompt] = useState(\"Voice Affect: Soft, gentle, soothing; embody tranquility. Tone: Calm, reassuring, peaceful; convey genuine warmth and serenity. Pacing: Slow, deliberate, and unhurried; pause gently after instructions to allow the listener time to relax and follow along.\");\n  const [isProcessing, setIsProcessing] = useState(false);\n  const audioRef = React.useRef(null);\n  const mediaRecorderRef = React.useRef(null);\n  const recognitionRef = React.useRef(null);\n  const chunksRef = React.useRef([]);\n  const [textToSpeechAudioUrl, setTextToSpeechAudioUrl] = useState('');\n  const [speechToTextAudioUrl, setSpeechToTextAudioUrl] = useState('');\n  const [textToSpeechAudioBlob, setTextToSpeechAudioBlob] = useState(null);\n  const [speechToTextAudioBlob, setSpeechToTextAudioBlob] = useState(null);\n  const textToSpeechAudioRef = React.useRef(null);\n  const speechToTextAudioRef = React.useRef(null);\n  const [shouldAutoPlay, setShouldAutoPlay] = useState(false);\n  const [isUploading, setIsUploading] = useState(false);\n  const [isDownloading, setIsDownloading] = useState(false);\n  const [sessionId, setSessionId] = useState('');\n  const [sessionPassword, setSessionPassword] = useState('');\n  const [displayName, setDisplayName] = useState('');\n  const [isJoining, setIsJoining] = useState(false);\n\n  // Update the convertTextToSpeech function\n  const convertTextToSpeech = async () => {\n    if (!textToSpeak.trim()) return;\n    \n    console.log(\"Setting isConverting to true\");\n    setIsConverting(true);\n    setShouldAutoPlay(false); // Reset auto-play flag\n    \n    try {\n      // Create the OpenAI.fm API URL with query parameters\n      const voiceType = selectedVoice;\n      const prompt = customPrompt;\n      \n      const params = new URLSearchParams({\n        input: textToSpeak,\n        prompt: prompt,\n        voice: voiceType,\n        format: 'mp3'\n      });\n      \n      const directApiUrl = `https://www.openai.fm/api/generate?${params.toString()}`;\n      const corsProxyUrl = 'https://corsproxy.io/?';\n      const apiUrl = `${corsProxyUrl}${encodeURIComponent(directApiUrl)}`;\n      \n      console.log('Calling API through CORS proxy:', apiUrl);\n      \n      const response = await fetch(apiUrl, {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json, audio/*'\n        }\n      });\n      \n      if (!response.ok) {\n        throw new Error(`API error: ${response.status}`);\n      }\n      \n      const contentType = response.headers.get('content-type');\n      console.log('Response Content-Type:', contentType);\n      \n      let audioUrl = null;\n      \n      if (contentType && contentType.includes('application/json')) {\n        const responseData = await response.json();\n        console.log('Response data keys:', Object.keys(responseData));\n        \n        if (responseData.generation) {\n          const generationId = responseData.generation;\n          const directAudioUrl = `https://www.openai.fm/api/audio/${generationId}`;\n          audioUrl = `${corsProxyUrl}${encodeURIComponent(directAudioUrl)}`;\n        } else if (responseData.audio) {\n          const base64Data = responseData.audio;\n          const base64 = base64Data.includes('base64,') \n            ? base64Data.split('base64,')[1] \n            : base64Data;\n          \n          const binaryString = atob(base64);\n          const bytes = new Uint8Array(binaryString.length);\n          \n          for (let i = 0; i < binaryString.length; i++) {\n            bytes[i] = binaryString.charCodeAt(i);\n          }\n          \n          const audioBlob = new Blob([bytes.buffer], { type: 'audio/mp3' });\n          audioUrl = URL.createObjectURL(audioBlob);\n        }\n      } else if (contentType && contentType.includes('audio/')) {\n        const audioBlob = await response.blob();\n        audioUrl = URL.createObjectURL(audioBlob);\n      }\n      \n      if (audioUrl) {\n        // Set the audio URL first\n        setTextToSpeechAudioUrl(audioUrl);\n        \n        // Use setTimeout to ensure the audio element is ready\n        setTimeout(() => {\n          setShouldAutoPlay(true);\n        }, 100);\n      } else {\n        throw new Error('No audio URL generated');\n      }\n      \n      setToastMessage('متن با موفقیت به گفتار تبدیل شد');\n      setShowToast(true);\n    } catch (error) {\n      console.error('Error converting text to speech:', error);\n      setToastMessage('خطا در تبدیل متن به گفتار: ' + error.message);\n      setShowToast(true);\n      \n      // Fallback to browser's built-in TTS\n      if ('speechSynthesis' in window) {\n        console.log(\"Using browser TTS fallback\");\n        const speech = new SpeechSynthesisUtterance();\n        speech.text = textToSpeak;\n        speech.lang = 'fa-IR';\n        window.speechSynthesis.speak(speech);\n      }\n    } finally {\n      setIsConverting(false);\n    }\n  };\n\n  // Update the text-to-speech audio effect\n  useEffect(() => {\n    if (textToSpeechAudioUrl && textToSpeechAudioRef.current && shouldAutoPlay) {\n      console.log('Attempting to play audio...');\n      textToSpeechAudioRef.current.load();\n      textToSpeechAudioRef.current.play()\n        .then(() => {\n          console.log('Audio played successfully');\n          setShouldAutoPlay(false);\n        })\n        .catch(e => {\n          console.error(\"Text to speech audio autoplay error:\", e);\n          setShouldAutoPlay(false);\n        });\n    }\n  }, [textToSpeechAudioUrl, shouldAutoPlay]);\n\n  useEffect(() => {\n    if (speechToTextAudioUrl && speechToTextAudioRef.current) {\n      speechToTextAudioRef.current.load();\n    }\n  }, [speechToTextAudioUrl]);\n\n  // Check if screen is mobile\n  useEffect(() => {\n    // Always treat as mobile view for sidebar functionality\n    setIsMobile(true);\n    setSidebarCollapsed(true);\n    \n    // Keep resize listener for other responsive elements\n    const handleResize = () => {\n      // We're not changing isMobile based on screen size anymore\n      // This is just kept for other responsive elements if needed\n    };\n    \n    window.addEventListener('resize', handleResize);\n    \n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleLogout = async () => {\n    await logout();\n    navigate('/login');\n  };\n\n  const handleSidebarToggle = () => {\n    const newSidebarState = !sidebarCollapsed;\n    setSidebarCollapsed(newSidebarState);\n    \n    // Always use the mobile sidebar behavior regardless of screen size\n    const sidebarEl = document.querySelector('.sidebar');\n    if (sidebarEl) {\n      if (newSidebarState) {\n        sidebarEl.classList.remove('show');\n      } else {\n        sidebarEl.classList.add('show');\n      }\n    }\n  };\n  \n  // Start recording audio\n  const startRecording = () => {\n    // Reset existing recording\n    setSpeechToTextAudioBlob(null);\n    setSpeechToTextAudioUrl('');\n    chunksRef.current = [];\n    \n    navigator.mediaDevices.getUserMedia({ audio: true })\n      .then(stream => {\n        const mediaRecorder = new MediaRecorder(stream, {\n          mimeType: 'audio/ogg;codecs=opus'\n        });\n        mediaRecorderRef.current = mediaRecorder;\n        \n        mediaRecorder.ondataavailable = (e) => {\n          if (e.data.size > 0) {\n            chunksRef.current.push(e.data);\n          }\n        };\n        \n        mediaRecorder.onstop = () => {\n          const audioBlob = new Blob(chunksRef.current, { type: 'audio/ogg;codecs=opus' });\n          const audioUrl = URL.createObjectURL(audioBlob);\n          setSpeechToTextAudioBlob(audioBlob);\n          setSpeechToTextAudioUrl(audioUrl);\n          \n          // Upload the audio after recording is stopped\n          uploadAudio(audioBlob);\n        };\n        \n        mediaRecorder.start();\n      })\n      .catch(error => {\n        console.error(\"Error accessing microphone:\", error);\n        setToastMessage('خطا در دسترسی به میکروفون');\n        setShowToast(true);\n      });\n  };\n  \n  // Stop recording audio\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state !== 'inactive') {\n      mediaRecorderRef.current.stop();\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n    }\n  };\n\n  // Add a new function to handle audio upload\n  const uploadAudio = async (audioBlob) => {\n    setIsUploading(true);\n    try {\n      // Create FormData to send the audio file\n      const formData = new FormData();\n      formData.append('audio', audioBlob, 'recording.ogg');\n      formData.append('user', 'user'); // Add any additional data you need to send\n\n      // Make the POST request\n      const response = await fetch('YOUR_API_ENDPOINT', {\n        method: 'POST',\n        body: formData,\n        // Don't set Content-Type header, let the browser set it with the boundary\n      });\n\n      if (!response.ok) {\n        throw new Error(`Upload failed: ${response.status}`);\n      }\n\n      const result = await response.json();\n      console.log('Upload successful:', result);\n      setToastMessage('فایل صوتی با موفقیت آپلود شد');\n      setShowToast(true);\n    } catch (error) {\n      console.error('Error uploading audio:', error);\n      setToastMessage('خطا در آپلود فایل صوتی: ' + error.message);\n      setShowToast(true);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  const downloadAudio = () => {\n    const audioUrl = activeNav === 'تبدیل-متن-به-گفتار' ? textToSpeechAudioUrl : speechToTextAudioUrl;\n    if (audioUrl) {\n      const a = document.createElement('a');\n      a.href = audioUrl;\n      a.download = activeNav === 'تبدیل-متن-به-گفتار' ? 'text-to-speech.mp3' : 'speech-to-text.ogg';\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  };\n  \n  const openConversation = (friend) => {\n    setSelectedFriend(friend);\n    setShowConversationModal(true);\n  };\n\n  const createNewGroup = () => {\n    if (newGroupName.trim() === '' || selectedMembers.length === 0) {\n      setToastMessage('لطفا نام گروه و حداقل یک عضو را انتخاب کنید');\n      setShowToast(true);\n      return;\n    }\n    \n    const newGroup = {\n      id: groups.length + 1,\n      name: newGroupName,\n      members: selectedMembers,\n      avatar: `https://ui-avatars.com/api/?name=${encodeURIComponent(newGroupName)}&background=random`\n    };\n    \n    setGroups([...groups, newGroup]);\n    \n    // Also add to recent conversations\n    const newConversation = {\n      id: recentConversations.length + 1,\n      name: newGroupName,\n      lastMessage: 'گروه ایجاد شد',\n      time: 'هم اکنون',\n      unread: 0,\n      avatar: newGroup.avatar,\n      isGroup: true\n    };\n    \n    // In a real app, you would update the state of recentConversations here\n    \n    setShowCreateGroupModal(false);\n    setNewGroupName('');\n    setSelectedMembers([]);\n    \n    setToastMessage('گروه با موفقیت ایجاد شد');\n    setShowToast(true);\n  };\n\n  const toggleMemberSelection = (memberId) => {\n    if (selectedMembers.includes(memberId)) {\n      setSelectedMembers(selectedMembers.filter(id => id !== memberId));\n    } else {\n      setSelectedMembers([...selectedMembers, memberId]);\n    }\n  };\n\n  // Friends list logic\n  const toggleFriendSelection = (friendId) => {\n    if (selectedFriend === friendId) {\n      setSelectedFriend(null);\n    } else {\n      setSelectedFriend(friendId);\n    }\n  };\n\n  const updateFriendStatus = (friendId, status) => {\n    setFriends(prevFriends =>\n      prevFriends.map(friend =>\n        friend.id === friendId ? { ...friend, status } : friend\n      )\n    );\n  };\n\n  // Enhanced Friends list UI\n  const renderFriendsList = () => (\n    <div className=\"bg-white rounded-xl shadow-lg overflow-hidden\">\n      {/* Friends Header with Search */}\n      <div className=\"p-4 border-b border-gray-100 bg-gradient-to-r from-indigo-50 to-blue-50\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h2 className=\"text-xl font-bold text-indigo-700 flex items-center\">\n            <FaUserFriends className=\"ml-2\" />\n            دوستان\n            <span className=\"text-sm bg-indigo-100 text-indigo-800 px-2 py-1 rounded-full ml-2\">\n              {friends.filter(f => f.requestStatus === 'accepted').length} دوست\n            </span>\n            <span className=\"text-sm bg-yellow-100 text-yellow-800 px-2 py-1 rounded-full ml-2\">\n              {friends.filter(f => f.requestStatus?.includes('pending')).length} درخواست\n            </span>\n          </h2>\n        </div>\n        \n        <div className=\"relative\">\n          <FaSearch className=\"absolute left-3 top-3 text-gray-400\" />\n          <input \n            type=\"text\" \n            placeholder=\"جستجوی دوستان...\"\n            className=\"w-full pr-10 pl-10 py-2 border border-gray-200 rounded-full focus:ring-2 focus:ring-indigo-200 focus:border-indigo-500 transition-all\"\n            dir=\"rtl\"\n          />\n        </div>\n      </div>\n      \n      {/* Friends List */}\n      <div className=\"divide-y divide-gray-100 max-h-[500px] overflow-y-auto\">\n        {friends.map(friend => (\n          <div \n            key={friend.id}\n            className={`p-4 flex items-center transition-all ${selectedFriend === friend.id ? 'bg-indigo-50' : 'hover:bg-gray-50'}`}\n            onClick={() => toggleFriendSelection(friend.id)}\n          >\n            <div className=\"relative\">\n              <img \n                src={friend.avatar} \n                alt={friend.name}\n                className=\"w-12 h-12 rounded-full object-cover border-2 border-white shadow-sm\"\n              />\n              <span className={`absolute bottom-0 right-0 w-3 h-3 rounded-full border-2 border-white ${friend.status === 'آنلاین' ? 'bg-green-500' : friend.status === 'مشغول' ? 'bg-yellow-500' : 'bg-gray-400'}`}></span>\n            </div>\n            \n            <div className=\"mr-3 flex-1\">\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"font-medium text-gray-800\">{friend.name}</h3>\n                <span className=\"text-xs text-gray-500\">{friend.lastSeen}</span>\n              </div>\n              <div className=\"flex items-center mt-1\">\n                <span className={`text-xs px-2 py-1 rounded-full ${friend.status === 'آنلاین' ? 'bg-green-100 text-green-800' : friend.status === 'مشغول' ? 'bg-yellow-100 text-yellow-800' : 'bg-gray-100 text-gray-800'}`}>\n                  {friend.status}\n                </span>\n              </div>\n            </div>\n            \n            <div className=\"flex space-x-2\">\n              {friend.requestStatus === 'accepted' ? (\n                <>\n                  <button className=\"p-2 text-indigo-600 hover:bg-indigo-100 rounded-full transition-colors\">\n                    <FaComments />\n                  </button>\n                  <button className=\"p-2 text-blue-600 hover:bg-blue-100 rounded-full transition-colors\">\n                    <FaPhoneAlt />\n                  </button>\n                </>\n              ) : friend.requestStatus === 'pending_outgoing' ? (\n                <button \n                  className=\"p-2 text-gray-500 bg-gray-100 rounded-full cursor-not-allowed\"\n                  disabled\n                >\n                  درخواست ارسال شد\n                </button>\n              ) : friend.requestStatus === 'pending_incoming' ? (\n                <>\n                  <button\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      acceptFriendRequest(friend.id);\n                    }}\n                    className=\"p-2 text-green-600 hover:bg-green-100 rounded-full transition-colors\"\n                  >\n                    قبول\n                  </button>\n                  <button\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      rejectFriendRequest(friend.id);\n                    }}\n                    className=\"p-2 text-red-600 hover:bg-red-100 rounded-full transition-colors\"\n                  >\n                    رد\n                  </button>\n                </>\n              ) : (\n                <button\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    sendFriendRequest(friend.id);\n                  }}\n                  className=\"p-2 text-indigo-600 hover:bg-indigo-100 rounded-full transition-colors\"\n                >\n                  <FaUserPlus />\n                </button>\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n      \n      {/* Add Friend Button */}\n      <div className=\"p-4 border-t border-gray-100\">\n        <button \n          className=\"w-full py-2 bg-indigo-600 hover:bg-indigo-700 text-white rounded-lg flex items-center justify-center gap-2 transition-colors\"\n          onClick={() => setShowCreateGroupModal(true)}\n        >\n          <FaUserPlus />\n          افزودن دوست جدید\n        </button>\n      </div>\n    </div>\n  );\n\n  // Inside the Dashboard component\n  const sendFriendRequest = (friendId) => {\n    setFriends(prevFriends =>\n      prevFriends.map(friend =>\n        friend.id === friendId ? { ...friend, requestStatus: 'pending_outgoing' } : friend\n      )\n    );\n  };\n\n  const acceptFriendRequest = (friendId) => {\n    setFriends(prevFriends =>\n      prevFriends.map(friend =>\n        friend.id === friendId ? { ...friend, requestStatus: 'accepted' } : friend\n      )\n    );\n  };\n\n  const rejectFriendRequest = (friendId) => {\n    setFriends(prevFriends =>\n      prevFriends.map(friend =>\n        friend.id === friendId ? { ...friend, requestStatus: null } : friend\n      )\n    );\n  };\n\n  const handleJoinSession = async () => {\n    if (!sessionId.trim()) {\n      setToastMessage('لطفا شناسه جلسه را وارد کنید');\n      setShowToast(true);\n      return;\n    }\n    \n    setIsJoining(true);\n    \n    try {\n      // For testing without a real backend API\n      if (true) { // or remove the condition entirely\n        // Session data for the conversation\n        const sessionData = {\n          id: sessionId,\n          displayName: displayName || user?.name || 'کاربر ناشناس',\n          joinedAt: new Date().toISOString(),\n        };\n        \n        // Store session data in localStorage to access it in the conversation page\n        localStorage.setItem('currentSession', JSON.stringify(sessionData));\n        \n        // Redirect to the conversation page\n        navigate(`/conversation?id=${sessionId}`, { \n          state: { \n            session: sessionData,\n            message: 'به جلسه پیوستید' \n          } \n        });\n        \n        return;\n      }\n      \n      // Check if the session exists - replace with your actual API endpoint\n      const response = await fetch(`/api/sessions/check?id=${sessionId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          sessionId,\n          password: sessionPassword,\n        }),\n      });\n      \n      if (!response.ok) {\n        throw new Error('جلسه مورد نظر یافت نشد یا رمز عبور اشتباه است');\n      }\n      \n      // Session exists, redirect to conversation page\n      const sessionData = {\n        id: sessionId,\n        displayName: displayName || user?.name || 'کاربر ناشناس',\n        joinedAt: new Date().toISOString(),\n      };\n      \n      // Store session data in localStorage to access it in the conversation page\n      localStorage.setItem('currentSession', JSON.stringify(sessionData));\n      \n      // Redirect to the conversation page\n      navigate(`/conversation?id=${sessionId}`, { \n        state: { \n          session: sessionData,\n          message: 'به جلسه پیوستید' \n        } \n      });\n      \n    } catch (error) {\n      console.error('Error joining session:', error);\n      setToastMessage(error.message || 'خطا در پیوستن به جلسه');\n      setShowToast(true);\n    } finally {\n      setIsJoining(false);\n    }\n  };\n\n  const sendMessage = () => {\n    if (newMessage.trim() === '') return;\n    \n    const newMsg = {\n      id: messages.length + 1,\n      text: newMessage,\n      sender: 'user',\n      timestamp: new Date().toLocaleTimeString('fa-IR', { hour: '2-digit', minute: '2-digit' })\n    };\n    \n    setMessages([...messages, newMsg]);\n    setNewMessage('');\n    \n    // Simulate receiving a response\n    setTimeout(() => {\n      const responseMsg = {\n        id: messages.length + 2,\n        text: 'پیام شما دریافت شد. بزودی پاسخ میدهم.',\n        sender: 'friend',\n        timestamp: new Date().toLocaleTimeString('fa-IR', { hour: '2-digit', minute: '2-digit' })\n      };\n      setMessages(prevMessages => [...prevMessages, responseMsg]);\n    }, 1000);\n  };\n\n  const toggleListening = () => {\n    if (isListening) {\n      if (recognitionRef.current) {\n        recognitionRef.current.stop();\n      }\n      stopRecording();\n      setIsListening(false);\n    } else {\n      if (recognitionRef.current) {\n        recognitionRef.current.start();\n      }\n      startRecording();\n      setIsListening(true);\n    }\n  };\n\n  return (\n    <Container fluid className=\"p-0\">\n      <Row className=\"min-vh-100 g-0\">\n        {/* Hidden audio elements */}\n        <audio ref={audioRef} src={audioUrl} style={{ display: 'none' }} />\n        <audio ref={textToSpeechAudioRef} src={textToSpeechAudioUrl} style={{ display: 'none' }} />\n        <audio ref={speechToTextAudioRef} src={speechToTextAudioUrl} style={{ display: 'none' }} />\n        \n        {/* Sidebar */}\n        <Col \n          xs={12} md={3} lg={2}\n          className={`sidebar bg-white shadow-sm border-start p-0 ${sidebarCollapsed ? 'sidebar-collapsed' : ''}`}\n          style={{\n            position: 'fixed',\n            top: 0,\n            right: 0,\n            height: '100vh',\n            zIndex: 1030,\n            overflowY: 'auto',\n            transition: 'all 0.3s ease-in-out',\n            width: '228px', // Always use the same width\n            transform: !sidebarCollapsed ? 'translateX(0)' : 'translateX(100%)' // Always use mobile behavior\n          }}\n        >\n          <div className=\"sidebar-header border-bottom p-3 d-flex align-items-center justify-content-between\">\n            <h1 className=\"text-primary m-0 d-flex align-items-center justify-content-between w-100\">\n              <span>سامانه همیار</span>\n              \n              <Button \n                variant=\"outline-primary\"\n                className=\"btn-icon shadow-sm d-flex align-items-center justify-content-center\"\n                style={{ width: '38px', height: '38px', borderRadius: '8px' }}\n                onClick={handleSidebarToggle}\n                title=\"بستن منو\"\n              >\n                <FaArrowRight size={14} />\n              </Button>\n            </h1>\n          </div>\n          \n          <Nav className=\"flex-column pt-2\">\n            {!sidebarCollapsed && (\n              <div className=\"text-uppercase small fw-semibold px-3 pt-3 pb-2 text-muted opacity-75\">اصلی</div>\n            )}\n            \n            <Nav.Link \n              className={`d-flex align-items-center py-3 px-3 ${activeNav === 'داشبورد' ? 'active bg-light border-end border-4 border-primary' : ''}`}\n              onClick={() => {\n                setActiveNav('داشبورد');\n                setShowSpeechToText(false);\n                setShowTextToSpeech(false);\n                setSidebarCollapsed(true);\n              }}\n              style={{\n                justifyContent: 'flex-start',\n              }}\n            >\n              <FaHome className=\"ms-2 fs-5\" />\n              {!sidebarCollapsed && <span>داشبورد</span>}\n            </Nav.Link>\n            \n            {!sidebarCollapsed && (\n              <div className=\"text-uppercase small fw-semibold px-3 pt-3 pb-2 text-muted opacity-75\">ابزار های تبدیل</div>\n            )}\n            \n            <Nav.Link \n              className={`d-flex align-items-center py-3 px-3 ${activeNav === 'تبدیل-گفتار-به-متن' ? 'active bg-light border-end border-4 border-primary' : ''}`}\n              onClick={() => {\n                setActiveNav('تبدیل-گفتار-به-متن');\n                setShowSpeechToText(false);\n                setShowTextToSpeech(false);\n                setSidebarCollapsed(true);\n              }}\n              style={{\n                justifyContent: 'flex-start',\n              }}\n            >\n              <FaMicrophone className=\"ms-2 fs-5\" />\n              {!sidebarCollapsed && <span>گفتار به متن</span>}\n            </Nav.Link>\n            \n            <Nav.Link \n              className={`d-flex align-items-center py-3 px-3 ${activeNav === 'تبدیل-متن-به-گفتار' ? 'active bg-light border-end border-4 border-primary' : ''}`}\n              onClick={() => {\n                setActiveNav('تبدیل-متن-به-گفتار');\n                setShowTextToSpeech(true);\n                setShowSpeechToText(false);\n                setSidebarCollapsed(true);\n              }}\n              style={{\n                justifyContent: 'flex-start',\n              }}\n            >\n              <FaVolumeUp className=\"ms-2 fs-5\" />\n              {!sidebarCollapsed && <span>متن به گفتار</span>}\n            </Nav.Link>\n            \n            {!sidebarCollapsed && (\n              <div className=\"text-uppercase small fw-semibold px-3 pt-3 pb-2 text-muted opacity-75\">ارتباطات</div>\n            )}\n            \n            <Nav.Link \n              className={`d-flex align-items-center py-3 px-3 ${activeNav === 'گفتگوها' ? 'active bg-light border-end border-4 border-primary' : ''}`}\n              onClick={() => {\n                setActiveNav('گفتگوها');\n                setShowSpeechToText(false);\n                setShowTextToSpeech(false);\n                setSidebarCollapsed(true);\n              }}\n              style={{\n                justifyContent: 'flex-start',\n              }}\n            >\n              <FaComments className=\"ms-2 fs-5\" />\n              {!sidebarCollapsed && <span>گفتگوها</span>}\n            </Nav.Link>\n            \n            <Nav.Link \n              className={`d-flex align-items-center py-3 px-3 ${activeNav === 'دوستان' ? 'active bg-light border-end border-4 border-primary' : ''}`}\n              onClick={() => {\n                setActiveNav('دوستان');\n                setShowSpeechToText(false);\n                setShowTextToSpeech(false);\n                setSidebarCollapsed(true);\n              }}\n              style={{\n                justifyContent: 'flex-start',\n              }}\n            >\n              <FaUserFriends className=\"ms-2 fs-5\" />\n              {!sidebarCollapsed && <span>دوستان</span>}\n            </Nav.Link>\n            \n            <Nav.Link \n              className={`d-flex align-items-center py-3 px-3 ${activeNav === 'تاریخچه' ? 'active bg-light border-end border-4 border-primary' : ''}`}\n              onClick={() => {\n                setActiveNav('تاریخچه');\n                setShowSpeechToText(false);\n                setShowTextToSpeech(false);\n                setSidebarCollapsed(true);\n              }}\n              style={{\n                justifyContent: 'flex-start',\n              }}\n            >\n              <FaHistory className=\"ms-2 fs-5\" />\n              {!sidebarCollapsed && <span>تاریخچه</span>}\n            </Nav.Link>\n            \n            {!sidebarCollapsed && (\n              <div className=\"text-uppercase small fw-semibold px-3 pt-3 pb-2 text-muted opacity-75\">تنظیمات</div>\n            )}\n            \n            <Nav.Link \n              className={`d-flex align-items-center py-3 px-3 ${activeNav === 'تنظیمات' ? 'active bg-light border-end border-4 border-primary' : ''}`}\n              onClick={() => {\n                setActiveNav('تنظیمات');\n                setShowSpeechToText(false);\n                setShowTextToSpeech(false);\n                setSidebarCollapsed(true);\n              }}\n              style={{\n                justifyContent: 'flex-start',\n              }}\n            >\n              <FaCog className=\"ms-2 fs-5\" />\n              {!sidebarCollapsed && <span>تنظیمات حساب</span>}\n            </Nav.Link>\n            \n            <Nav.Link \n              className=\"d-flex align-items-center py-3 px-3 text-danger mt-3\"\n              onClick={() => {\n                handleLogout();\n                setSidebarCollapsed(true);\n              }}\n              style={{\n                justifyContent: 'flex-start',\n              }}\n            >\n              <FaSignOutAlt className=\"ms-2 fs-5\" />\n              {!sidebarCollapsed && <span>خروج</span>}\n            </Nav.Link>\n          </Nav>\n        </Col>\n\n        {/* Main Content */}\n        <Col \n          xs={12}\n          md={12} \n          lg={12}\n          className=\"main-content px-0\"\n          style={{ \n            transition: 'all 0.3s ease',\n            marginRight: '0' // Always use full width\n          }}\n        >\n          {/* Top Navbar */}\n          <Navbar bg=\"white\" expand=\"sm\" className=\"shadow-sm rounded-3 mx-3 mb-4 px-3 sticky-top\" style={{ height: '70px' }}>\n            <Container fluid>\n              {/* Toggle Button in Navbar - always show it */}\n              <Button \n                variant=\"light\"\n                className=\"rounded-circle d-flex align-items-center justify-content-center shadow-sm\"\n                style={{ width: '40px', height: '40px' }}\n                onClick={handleSidebarToggle}\n                title=\"باز کردن منو\"\n              >\n                <FaArrowLeft />\n              </Button>\n              <Navbar.Brand></Navbar.Brand>\n              \n              {/* Moved Dropdown outside of Navbar.Collapse */}\n              <Dropdown align=\"end\" className=\"me-auto\">\n                <Dropdown.Toggle variant=\"light\" id=\"user-dropdown\" className=\"d-flex align-items-center rounded-pill border-0 bg-light\">\n                  <img \n                    src=\"https://randomuser.me/api/portraits/men/1.jpg\" \n                    alt=\"User\"\n                    className=\"rounded-circle\"\n                    style={{ width: '38px', height: '38px', marginLeft: '10px', objectFit: 'cover' }}\n                  />\n                  <span>{user?.name || 'کاربر همیار'}</span>\n                </Dropdown.Toggle>\n                <Dropdown.Menu className=\"shadow border-0 rounded-3 mt-2\">\n                  <Dropdown.Item className=\"py-2\"><FaUser className=\"me-2\" /> پروفایل</Dropdown.Item>\n                  <Dropdown.Item className=\"py-2\"><FaCog className=\"me-2\" /> تنظیمات</Dropdown.Item>\n                  <Dropdown.Divider />\n                  <Dropdown.Item onClick={handleLogout} className=\"py-2 text-danger\"><FaSignOutAlt className=\"me-2\" /> خروج</Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </Container>\n          </Navbar>\n\n          <Container fluid className=\"px-3 px-md-4\">\n            {activeNav === 'تبدیل-متن-به-گفتار' && (\n              <Card className=\"shadow-sm border-0 mb-4 overflow-hidden\">\n                <Card.Header className=\"bg-gradient-to-r from-white to-primary-subtle p-4 border-0\">\n                  <div className=\"d-flex align-items-center mb-3\">\n                    <FaVolumeUp className=\"me-2 text-primary\" size={24} />\n                    <h2 className=\"h3 mb-0 fw-bold text-primary\">تبدیل متن به گفتار</h2>\n                  </div>\n                  <Card.Text className=\"text-muted mb-0\">\n                    در این بخش می‌توانید متن مورد نظر خود را وارد کنید و آن را به گفتار تبدیل کنید.\n                  </Card.Text>\n                </Card.Header>\n                <Card.Body className=\"p-4\">\n                  <Form>\n                    <Form.Group className=\"mb-4\">\n                      <Form.Label className=\"fw-semibold\">متن برای تبدیل به گفتار:</Form.Label>\n                      <Form.Control\n                        as=\"textarea\"\n                        rows={4}\n                        value={textToSpeak}\n                        onChange={(e) => setTextToSpeak(e.target.value)}\n                        placeholder=\"متن خود را اینجا وارد کنید...\"\n                        className=\"shadow-sm\"\n                        style={{ direction: 'rtl', textAlign: 'right' }}\n                      />\n                      <Form.Text className=\"text-muted d-flex justify-content-end mt-2\">\n                        <span className={textToSpeak.length > 450 ? 'text-danger' : ''}>{textToSpeak.length}</span> / 500 کاراکتر\n                      </Form.Text>\n                    </Form.Group>\n                    \n                    <Row className=\"mb-4\">\n                      <Col md={6} lg={4} className=\"mb-3\">\n                        <Card className=\"border h-100\">\n                          <Card.Body>\n                            <Form.Group>\n                              <Form.Label className=\"fw-semibold mb-3\">زبان:</Form.Label>\n                              <Form.Select \n                                defaultValue=\"fa-IR\"\n                                className=\"shadow-sm\"\n                              >\n                                <option value=\"fa-IR\">فارسی</option>\n                                <option value=\"en-US\">انگلیسی (آمریکایی)</option>\n                                <option value=\"ar-SA\">عربی</option>\n                              </Form.Select>\n                            </Form.Group>\n                          </Card.Body>\n                        </Card>\n                      </Col>\n                      \n                      <Col md={6} lg={4} className=\"mb-3\">\n                        <Card className=\"border h-100\">\n                          <Card.Body>\n                            <Form.Group>\n                              <Form.Label className=\"fw-semibold mb-3\">صدا:</Form.Label>\n                              <Form.Select \n                                value={selectedVoice}\n                                onChange={(e) => setSelectedVoice(e.target.value)}\n                                className=\"shadow-sm\"\n                              >\n                                <option value=\"alloy\">Alloy</option>\n                                <option value=\"ash\">Ash</option>\n                                <option value=\"ballad\">Ballad</option>\n                                <option value=\"coral\">Coral</option>\n                                <option value=\"echo\">Echo</option>\n                                <option value=\"fable\">Fable</option>\n                                <option value=\"onyx\">Onyx</option>\n                                <option value=\"nova\">Nova</option>\n                                <option value=\"sage\">Sage</option>\n                                <option value=\"shimmer\">Shimmer</option>\n                                <option value=\"verse\">Verse</option>\n                                <option value=\"random\">Random</option>\n                              </Form.Select>\n                            </Form.Group>\n                          </Card.Body>\n                        </Card>\n                      </Col>\n                    </Row>\n                    \n                    <Form.Group className=\"mb-4\">\n                      <Form.Label className=\"fw-semibold\">تنظیمات صدا (Prompt):</Form.Label>\n                      <Form.Control\n                        as=\"textarea\"\n                        rows={3}\n                        value={customPrompt}\n                        onChange={(e) => setCustomPrompt(e.target.value)}\n                        className=\"shadow-sm\"\n                        style={{ direction: 'ltr', textAlign: 'left' }}\n                        placeholder=\"Customize voice characteristics...\"\n                      />\n                      <Form.Text className=\"text-muted\">\n                        این متن به زبان انگلیسی برای تعیین ویژگی‌های صدا استفاده می‌شود.\n                      </Form.Text>\n                    </Form.Group>\n                    \n                    {/* Audio element with controls */}\n                    {textToSpeechAudioUrl && (\n                      <Card className=\"bg-light mb-4\">\n                        <Card.Body>\n                          <Card.Subtitle className=\"mb-2 text-primary\">فایل صوتی تولید شده:</Card.Subtitle>\n                          <audio ref={textToSpeechAudioRef} src={textToSpeechAudioUrl} className=\"w-100\" controls />\n                        </Card.Body>\n                      </Card>\n                    )}\n                    \n                    <div className=\"d-flex flex-column flex-sm-row gap-3 mt-4\">\n                      <Button\n                        variant=\"primary\"\n                        onClick={convertTextToSpeech}\n                        disabled={!textToSpeak.trim() || isConverting}\n                        className=\"px-4 py-2 d-flex align-items-center justify-content-center gap-2 w-100 w-sm-auto\"\n                      >\n                        {isConverting ? (\n                          <>\n                            <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                            <span>در حال تبدیل...</span>\n                          </>\n                        ) : (\n                          <>\n                            <FaVolumeUp />\n                            <span>پخش گفتار</span>\n                          </>\n                        )}\n                      </Button>\n                      \n                      <Button\n                        variant=\"outline-primary\"\n                        onClick={downloadAudio}\n                        disabled={!textToSpeechAudioUrl}\n                        className=\"px-4 py-2 d-flex align-items-center justify-content-center gap-2 w-100 w-sm-auto\"\n                      >\n                        <FaSave />\n                        <span>ذخیره فایل صوتی</span>\n                      </Button>\n                    </div>\n                  </Form>\n                </Card.Body>\n                <Card.Footer className=\"bg-light py-3\">\n                  <Alert variant=\"info\" className=\"mb-0 d-flex align-items-center gap-2\">\n                    <FaInfoCircle className=\"flex-shrink-0\" />\n                    <span>برای نتیجه بهتر، متن خود را با علائم نگارشی مناسب وارد کنید.</span>\n                  </Alert>\n                </Card.Footer>\n              </Card>\n            )}\n\n            {/* Speech to Text Content - with improved responsive classes */}\n            {activeNav === 'تبدیل-گفتار-به-متن' && (\n              <Card className=\"shadow-sm border-0 mb-4 overflow-hidden\">\n                <Card.Header className=\"bg-gradient-to-r from-white to-info-subtle p-4 border-0\">\n                  <div className=\"d-flex align-items-center mb-2\">\n                    <div className={`position-relative ${isListening ? 'pulse-animation' : ''}`}>\n                      <FaMicrophone className=\"me-2 text-info\" size={24} />\n                    </div>\n                    <h2 className=\"h3 mb-0 fw-bold text-info\">تبدیل گفتار به متن</h2>\n                  </div>\n                  <Card.Text className=\"text-muted mb-0\">\n                    به راحتی صحبت کنید و متن را دریافت کنید\n                  </Card.Text>\n                </Card.Header>\n                <Card.Body className=\"p-4\">\n                  <Row className=\"g-4\">\n                    <Col lg={6} className=\"mb-3 mb-lg-0\">\n                      <div className=\"h-100 d-flex flex-column\">\n                        <Alert variant={isListening ? \"danger\" : \"info\"} className=\"d-flex align-items-center justify-content-between mb-4\">\n                          <div className=\"d-flex align-items-center\">\n                            <div className={`rounded-circle me-2 ${isListening ? 'bg-danger' : 'bg-info'}`} style={{ width: '10px', height: '10px' }}></div>\n                            <span>{isListening ? 'در حال ضبط...' : 'آماده برای ضبط'}</span>\n                          </div>\n                          <small>{isListening ? 'برای توقف کلیک کنید' : 'برای شروع کلیک کنید'}</small>\n                        </Alert>\n\n                        <Button\n                          variant={isListening ? \"danger\" : \"primary\"}\n                          size=\"lg\"\n                          className=\"w-100 py-3 mb-4 d-flex align-items-center justify-content-center gap-2\"\n                          onClick={toggleListening}\n                        >\n                          <FaMicrophone />\n                          <span>{isListening ? 'توقف ضبط' : 'شروع ضبط صدا'}</span>\n                        </Button>\n\n                        {speechToTextAudioUrl && (\n                          <Card className=\"border mb-4 flex-grow-1\">\n                            <Card.Body>\n                              <Card.Title className=\"h6 d-flex align-items-center mb-3\">\n                                <FaVolumeUp className=\"text-primary me-2\" />\n                                پخش صدای ضبط شده\n                              </Card.Title>\n                              <audio ref={speechToTextAudioRef} src={speechToTextAudioUrl} className=\"w-100\" controls />\n                              <div className=\"d-flex flex-column flex-sm-row gap-2 mt-3\">\n                                <Button\n                                  variant=\"outline-primary\"\n                                  className=\"d-flex align-items-center justify-content-center gap-2 w-100\"\n                                  onClick={downloadAudio}\n                                >\n                                  <FaDownload />\n                                  <span>دانلود فایل صوتی</span>\n                                </Button>\n                              </div>\n                            </Card.Body>\n                          </Card>\n                        )}\n                      </div>\n                    </Col>\n\n                    <Col lg={6}>\n                      <div className=\"d-flex justify-content-between align-items-center mb-3\">\n                        <h5 className=\"mb-0 d-flex align-items-center\">\n                          <FaKeyboard className=\"text-primary me-2\" />\n                          متن تشخیص داده شده\n                        </h5>\n                        <div>\n                          <Button \n                            variant=\"light\" \n                            size=\"sm\" \n                            className=\"me-2\"\n                            onClick={() => navigator.clipboard.writeText(transcribedText)}\n                            disabled={!transcribedText}\n                          >\n                            <FaCopy />\n                          </Button>\n                          <Button \n                            variant=\"light\" \n                            size=\"sm\"\n                            onClick={() => setTranscribedText('')}\n                            disabled={!transcribedText}\n                          >\n                            <FaTrash />\n                          </Button>\n                        </div>\n                      </div>\n\n                      <Form.Control\n                        as=\"textarea\"\n                        rows={8}\n                        value={transcribedText}\n                        onChange={(e) => setTranscribedText(e.target.value)}\n                        placeholder=\"صحبت کنید تا متن اینجا نمایش داده شود...\"\n                        className=\"mb-4\"\n                        style={{ direction: 'rtl' }}\n                        readOnly\n                      />\n\n                      <Alert variant=\"success\" className=\"mb-0\">\n                        <Alert.Heading className=\"h6\">نکات برای نتیجه بهتر</Alert.Heading>\n                        <ul className=\"mb-0 ps-3\">\n                          <li>در محیطی آرام صحبت کنید</li>\n                          <li>از کلمات واضح و شمرده استفاده کنید</li>\n                          <li>میکروفون را در فاصله مناسب نگه دارید</li>\n                        </ul>\n                      </Alert>\n                    </Col>\n                  </Row>\n                </Card.Body>\n              </Card>\n            )}\n            \n            {/* Main Dashboard content (shown when no other tool is active) */}\n            {activeNav === 'داشبورد' && (\n              <>\n                <Card className=\"shadow-sm border-0 mb-4 overflow-hidden\">\n                  <Card.Header className=\"bg-gradient-to-r from-white to-primary-subtle p-4 border-0\">\n                    <div className=\"d-flex align-items-center mb-2\">\n                      <FaHome className=\"me-2 text-primary\" size={24} />\n                      <h2 className=\"h3 mb-0 fw-bold text-primary\">خوش آمدید</h2>\n                    </div>\n                    <Card.Text className=\"text-muted mb-0\">\n                      به سامانه همیار خوش آمدید. از ابزارهای زیر برای تبدیل گفتار به متن و متن به گفتار استفاده کنید.\n                    </Card.Text>\n                  </Card.Header>\n                </Card>\n                \n                <h5 className=\"mb-3 fw-bold text-dark\">ابزارهای مورد نیاز</h5>\n                <Row className=\"g-4 mb-4\">\n                  <Col md={6} lg={4}>\n                    <Card className=\"shadow-sm h-100 border-0\">\n                      <Card.Body className=\"p-4\">\n                        <Card.Title className=\"h5 mb-3 d-flex align-items-center\">\n                          <FaMicrophone className=\"me-2 text-primary\" />\n                          تبدیل گفتار به متن\n                        </Card.Title>\n                        <Card.Text className=\"text-muted\">\n                          به راحتی گفتار خود را به متن تبدیل کنید.\n                        </Card.Text>\n                        <Button\n                          variant=\"outline-primary\"\n                          className=\"mt-3 w-100 d-flex align-items-center justify-content-center gap-2\"\n                          onClick={() => {\n                            setActiveNav('تبدیل-گفتار-به-متن');\n                            setShowSpeechToText(false);\n                            setShowTextToSpeech(false);\n                          }}\n                        >\n                          <span>شروع کنید</span>\n                          <FaArrowLeft />\n                        </Button>\n                      </Card.Body>\n                    </Card>\n                  </Col>\n\n                  <Col md={6} lg={4}>\n                    <Card className=\"shadow-sm h-100 border-0\">\n                      <Card.Body className=\"p-4\">\n                        <Card.Title className=\"h5 mb-3 d-flex align-items-center\">\n                          <FaVolumeUp className=\"me-2 text-info\" />\n                          تبدیل متن به گفتار\n                        </Card.Title>\n                        <Card.Text className=\"text-muted\">\n                          متن را به صدای طبیعی تبدیل کنید.\n                        </Card.Text>\n                        <Button\n                          variant=\"outline-info\"\n                          className=\"mt-3 w-100 d-flex align-items-center justify-content-center gap-2\"\n                          onClick={() => {\n                            setActiveNav('تبدیل-متن-به-گفتار');\n                            setShowTextToSpeech(true);\n                            setShowSpeechToText(false);\n                          }}\n                        >\n                          <span>شروع کنید</span>\n                          <FaArrowLeft />\n                        </Button>\n                      </Card.Body>\n                    </Card>\n                  </Col>\n\n                  <Col md={6} lg={4}>\n                    <Card className=\"shadow-sm h-100 border-0\">\n                      <Card.Body className=\"p-4\">\n                        <Card.Title className=\"h5 mb-3 d-flex align-items-center\">\n                          <FaComments className=\"me-2 text-success\" />\n                          گفتگوهای آنلاین\n                        </Card.Title>\n                        <Card.Text className=\"text-muted\">\n                          با دوستان خود گفتگو کنید.\n                        </Card.Text>\n                        <Button\n                          variant=\"outline-success\"\n                          className=\"mt-3 w-100 d-flex align-items-center justify-content-center gap-2\"\n                          onClick={() => {\n                            setActiveNav('گفتگوها');\n                            setShowSpeechToText(false);\n                            setShowTextToSpeech(false);\n                          }}\n                        >\n                          <span>شروع کنید</span>\n                          <FaArrowLeft />\n                        </Button>\n                      </Card.Body>\n                    </Card>\n                  </Col>\n                </Row>\n                \n                <h5 className=\"my-3 fw-bold text-dark\">فعالیت‌های اخیر</h5>\n                <Card className=\"shadow-sm border-0 mb-4\">\n                  <Card.Body className=\"p-0\">\n                    <ListGroup variant=\"flush\">\n                      <ListGroup.Item className=\"p-3 d-flex align-items-center justify-content-between\">\n                        <div className=\"d-flex align-items-center\">\n                          <div className=\"rounded-circle bg-light-primary p-2 me-3\">\n                            <FaMicrophone className=\"text-primary\" />\n                          </div>\n                          <div>\n                            <h6 className=\"mb-0\">تبدیل گفتار به متن</h6>\n                            <small className=\"text-muted\">فایل صوتی ۱.۵ دقیقه‌ای</small>\n                          </div>\n                        </div>\n                        <small className=\"text-muted\">۱۵ دقیقه پیش</small>\n                      </ListGroup.Item>\n                      <ListGroup.Item className=\"p-3 d-flex align-items-center justify-content-between\">\n                        <div className=\"d-flex align-items-center\">\n                          <div className=\"rounded-circle bg-light-info p-2 me-3\">\n                            <FaVolumeUp className=\"text-info\" />\n                          </div>\n                          <div>\n                            <h6 className=\"mb-0\">تبدیل متن به گفتار</h6>\n                            <small className=\"text-muted\">متن ۲۰۰ کاراکتری</small>\n                          </div>\n                        </div>\n                        <small className=\"text-muted\">۲ ساعت پیش</small>\n                      </ListGroup.Item>\n                      <ListGroup.Item className=\"p-3 d-flex align-items-center justify-content-between\">\n                        <div className=\"d-flex align-items-center\">\n                          <div className=\"rounded-circle bg-light-success p-2 me-3\">\n                            <FaComments className=\"text-success\" />\n                          </div>\n                          <div>\n                            <h6 className=\"mb-0\">گفتگو با دوستان</h6>\n                            <small className=\"text-muted\">جلسه ۳۰ دقیقه‌ای</small>\n                          </div>\n                        </div>\n                        <small className=\"text-muted\">دیروز</small>\n                      </ListGroup.Item>\n                    </ListGroup>\n                  </Card.Body>\n                </Card>\n              </>\n            )}\n            \n            {/* History Content */}\n            {activeNav === 'تاریخچه' && (\n              <Card className=\"shadow-sm border-0 mb-4 overflow-hidden\">\n                <Card.Header className=\"bg-gradient-to-r from-white to-secondary-subtle p-4 border-0\">\n                  <div className=\"d-flex align-items-center mb-2\">\n                    <FaHistory className=\"me-2 text-secondary\" size={24} />\n                    <h2 className=\"h3 mb-0 fw-bold text-secondary\">تاریخچه فعالیت‌ها</h2>\n                  </div>\n                  <Card.Text className=\"text-muted mb-0\">\n                    تاریخچه فعالیت‌های شما در سامانه همیار\n                  </Card.Text>\n                </Card.Header>\n                <Card.Body className=\"p-4\">\n                  <Form className=\"mb-4\">\n                    <Row className=\"g-3\">\n                      <Col md={6} lg={3}>\n                        <Form.Group>\n                          <Form.Label>نوع فعالیت</Form.Label>\n                          <Form.Select className=\"shadow-sm\">\n                            <option value=\"all\">همه</option>\n                            <option value=\"speech-to-text\">گفتار به متن</option>\n                            <option value=\"text-to-speech\">متن به گفتار</option>\n                            <option value=\"conversation\">گفتگو</option>\n                          </Form.Select>\n                        </Form.Group>\n                      </Col>\n                      <Col md={6} lg={3}>\n                        <Form.Group>\n                          <Form.Label>از تاریخ</Form.Label>\n                          <Form.Control type=\"date\" className=\"shadow-sm\" />\n                        </Form.Group>\n                      </Col>\n                      <Col md={6} lg={3}>\n                        <Form.Group>\n                          <Form.Label>تا تاریخ</Form.Label>\n                          <Form.Control type=\"date\" className=\"shadow-sm\" />\n                        </Form.Group>\n                      </Col>\n                      <Col md={6} lg={3} className=\"d-flex align-items-end\">\n                        <Button variant=\"primary\" className=\"w-100\">\n                          <FaSearch className=\"me-2\" />\n                          جستجو\n                        </Button>\n                      </Col>\n                    </Row>\n                  </Form>\n                  \n                  <div className=\"table-responsive\">\n                    <table className=\"table table-hover\">\n                      <thead className=\"table-light\">\n                        <tr>\n                          <th>نوع فعالیت</th>\n                          <th>تاریخ</th>\n                          <th>جزئیات</th>\n                          <th>اندازه</th>\n                          <th>وضعیت</th>\n                          <th>عملیات</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr>\n                          <td>\n                            <div className=\"d-flex align-items-center\">\n                              <FaMicrophone className=\"text-primary me-2\" />\n                              <span>گفتار به متن</span>\n                            </div>\n                          </td>\n                          <td>۱۴۰۲/۰۴/۱۵</td>\n                          <td>فایل صوتی ۱.۵ دقیقه‌ای</td>\n                          <td>۱.۲ مگابایت</td>\n                          <td><Badge bg=\"success\">کامل</Badge></td>\n                          <td>\n                            <Button variant=\"link\" size=\"sm\" className=\"text-primary p-0 me-2\">\n                              <FaDownload />\n                            </Button>\n                            <Button variant=\"link\" size=\"sm\" className=\"text-danger p-0\">\n                              <FaTrash />\n                            </Button>\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <div className=\"d-flex align-items-center\">\n                              <FaVolumeUp className=\"text-info me-2\" />\n                              <span>متن به گفتار</span>\n                            </div>\n                          </td>\n                          <td>۱۴۰۲/۰۴/۱۴</td>\n                          <td>متن ۲۰۰ کاراکتری</td>\n                          <td>۸۵۰ کیلوبایت</td>\n                          <td><Badge bg=\"success\">کامل</Badge></td>\n                          <td>\n                            <Button variant=\"link\" size=\"sm\" className=\"text-primary p-0 me-2\">\n                              <FaDownload />\n                            </Button>\n                            <Button variant=\"link\" size=\"sm\" className=\"text-danger p-0\">\n                              <FaTrash />\n                            </Button>\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <div className=\"d-flex align-items-center\">\n                              <FaComments className=\"text-success me-2\" />\n                              <span>گفتگو</span>\n                            </div>\n                          </td>\n                          <td>۱۴۰۲/۰۴/۱۳</td>\n                          <td>جلسه ۳۰ دقیقه‌ای</td>\n                          <td>۴.۵ مگابایت</td>\n                          <td><Badge bg=\"warning\" text=\"dark\">ناتمام</Badge></td>\n                          <td>\n                            <Button variant=\"link\" size=\"sm\" className=\"text-primary p-0 me-2\">\n                              <FaDownload />\n                            </Button>\n                            <Button variant=\"link\" size=\"sm\" className=\"text-danger p-0\">\n                              <FaTrash />\n                            </Button>\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                  \n                  <div className=\"d-flex justify-content-between align-items-center mt-4\">\n                    <div className=\"text-muted\">نمایش ۱ تا ۳ از ۱۰ مورد</div>\n                    <nav>\n                      <ul className=\"pagination mb-0\">\n                        <li className=\"page-item disabled\">\n                          <a className=\"page-link\" href=\"#\" tabIndex=\"-1\" aria-disabled=\"true\">قبلی</a>\n                        </li>\n                        <li className=\"page-item active\"><a className=\"page-link\" href=\"#\">۱</a></li>\n                        <li className=\"page-item\"><a className=\"page-link\" href=\"#\">۲</a></li>\n                        <li className=\"page-item\"><a className=\"page-link\" href=\"#\">۳</a></li>\n                        <li className=\"page-item\">\n                          <a className=\"page-link\" href=\"#\">بعدی</a>\n                        </li>\n                      </ul>\n                    </nav>\n                  </div>\n                </Card.Body>\n              </Card>\n            )}\n\n            {/* Friends Content */}\n            {activeNav === 'دوستان' && (\n              <Row>\n                <Col lg={8} className=\"mx-auto\">\n                  <Card className=\"shadow-sm mb-4\">\n                    <Card.Header className=\"bg-gradient-to-r from-white to-primary-subtle border-0\">\n                      <Card.Title className=\"h5 mb-0 d-flex align-items-center\">\n                        <FaUserFriends className=\"me-2 text-primary\" />\n                        جستجوی دوستان\n                      </Card.Title>\n                    </Card.Header>\n                    <Card.Body className=\"p-4\">\n                      <InputGroup className=\"mb-3\">\n                        <Form.Control\n                          placeholder=\"جستجوی کاربران با نام یا ایمیل...\"\n                          aria-label=\"Search users\"\n                        />\n                        <Button variant=\"primary\">\n                          <FaSearch className=\"me-2\" />\n                          جستجو\n                        </Button>\n                      </InputGroup>\n                    </Card.Body>\n                  </Card>\n                  \n                  <Card className=\"shadow-sm\">\n                    <Card.Header className=\"bg-gradient-to-r from-white to-info-subtle border-0\">\n                      <Card.Title className=\"h5 mb-0 d-flex align-items-center\">\n                        <FaUserFriends className=\"me-2 text-info\" />\n                        نتایج جستجو\n                      </Card.Title>\n                    </Card.Header>\n                    <Card.Body className=\"p-5 text-center\">\n                      <div className=\"rounded-circle bg-light d-flex align-items-center justify-content-center mx-auto mb-3\" style={{ width: '80px', height: '80px' }}>\n                        <FaSearch className=\"text-muted\" size={24} />\n                      </div>\n                      <h5>جستجوی خود را انجام دهید</h5>\n                      <p className=\"text-muted\">برای یافتن دوستان، عبارت جستجوی خود را در کادر بالا وارد کنید</p>\n                    </Card.Body>\n                  </Card>\n                </Col>\n              </Row>\n            )}\n\n            {/* Conversations Content */}\n            {activeNav === 'گفتگوها' && (\n              <Row className=\"g-3\">\n                <Col md={6} className=\"mb-0\">\n                  <Card className=\"shadow-sm h-100\">\n                    <Card.Header className=\"bg-gradient-to-r from-white to-primary-subtle border-0\">\n                      <Card.Title className=\"h5 mb-0 d-flex align-items-center\">\n                        <FaPlus className=\"me-2 text-primary\" />\n                        ایجاد جلسه گفتگوی جدید\n                      </Card.Title>\n                    </Card.Header>\n                    <Card.Body className=\"p-4\">\n                      <Form>\n                        <Form.Group className=\"mb-3\">\n                          <Form.Label>شناسه جلسه:</Form.Label>\n                          <Form.Control \n                            type=\"text\"\n                            placeholder=\"یک شناسه منحصر به فرد وارد کنید\"\n                          />\n                        </Form.Group>\n                        \n                        <Form.Group className=\"mb-3\">\n                          <Form.Label>رمز عبور (اختیاری):</Form.Label>\n                          <Form.Control \n                            type=\"password\"\n                            placeholder=\"رمز عبور برای حفاظت از جلسه\"\n                          />\n                          <Form.Text className=\"text-muted\">\n                            در صورت عدم نیاز به رمز عبور، این فیلد را خالی بگذارید.\n                          </Form.Text>\n                        </Form.Group>\n                        \n                        <Form.Group className=\"mb-4\">\n                          <Form.Label>نام نمایشی شما:</Form.Label>\n                          <Form.Control \n                            type=\"text\"\n                            placeholder=\"نام شما در این جلسه\"\n                          />\n                        </Form.Group>\n                        \n                        <Button variant=\"primary\" className=\"w-100\">\n                          <FaPlus className=\"me-2\" />\n                          ایجاد و شروع جلسه\n                        </Button>\n                      </Form>\n                    </Card.Body>\n                  </Card>\n                </Col>\n                \n                <Col md={6} className=\"mb-0\">\n                  <Card className=\"shadow-sm h-100\">\n                    <Card.Header className=\"bg-gradient-to-r from-white to-info-subtle border-0\">\n                      <Card.Title className=\"h5 mb-0 d-flex align-items-center\">\n                        <FaSignInAlt className=\"me-2 text-info\" />\n                        پیوستن به جلسه گفتگو\n                      </Card.Title>\n                    </Card.Header>\n                    <Card.Body className=\"p-4\">\n                      <Form>\n                        <Form.Group className=\"mb-3\">\n                          <Form.Label>شناسه جلسه:</Form.Label>\n                          <Form.Control \n                            type=\"text\"\n                            placeholder=\"شناسه جلسه را وارد کنید\"\n                            value={sessionId}\n                            onChange={(e) => setSessionId(e.target.value)}\n                          />\n                        </Form.Group>\n                        \n                        <Form.Group className=\"mb-3\">\n                          <Form.Label>رمز عبور:</Form.Label>\n                          <Form.Control \n                            type=\"password\"\n                            placeholder=\"رمز عبور جلسه (در صورت وجود)\"\n                            value={sessionPassword}\n                            onChange={(e) => setSessionPassword(e.target.value)}\n                          />\n                        </Form.Group>\n                        \n                        <Form.Group className=\"mb-4\">\n                          <Form.Label>نام نمایشی شما:</Form.Label>\n                          <Form.Control \n                            type=\"text\"\n                            placeholder=\"نام شما در این جلسه\"\n                            value={displayName}\n                            onChange={(e) => setDisplayName(e.target.value)}\n                          />\n                        </Form.Group>\n                        \n                        <Button \n                          variant=\"info\" \n                          className=\"w-100 text-white\"\n                          onClick={handleJoinSession}\n                          disabled={isJoining}\n                        >\n                          {isJoining ? (\n                            <span>در حال پیوستن...</span>\n                          ) : (\n                            <>\n                              <FaSignInAlt className=\"me-2\" />\n                              پیوستن به جلسه\n                            </>\n                          )}\n                        </Button>\n                      </Form>\n                    </Card.Body>\n                  </Card>\n                </Col>\n                \n                <Col xs={12}>\n                  <Alert variant=\"info\" className=\"d-flex align-items-start\">\n                    <FaInfoCircle className=\"me-2 mt-1 flex-shrink-0\" />\n                    <div>\n                      <Alert.Heading className=\"h6\">نکات مفید</Alert.Heading>\n                      <ol className=\"mb-0\">\n                        <li>شناسه جلسه خود را به افرادی که می‌خواهید با آن‌ها گفتگو کنید، به اشتراک بگذارید.</li>\n                        <li>برای جلسات خصوصی، یک رمز عبور تعیین کنید و آن را فقط با افراد مورد نظر به اشتراک بگذارید.</li>\n                        <li>با استفاده از ابزارهای تبدیل گفتار به متن و متن به گفتار می‌توانید ارتباط بهتری برقرار کنید.</li>\n                      </ol>\n                    </div>\n                  </Alert>\n                </Col>\n              </Row>\n            )}\n          </Container>\n        </Col>\n      </Row>\n      \n      {/* Toast notifications with improved styling */}\n      <ToastContainer position=\"bottom-end\" className=\"p-3\">\n        <Toast show={showToast} onClose={() => setShowToast(false)} delay={3000} autohide bg=\"light\" className=\"border-0\">\n          <Toast.Header closeButton={true} className=\"bg-white border-0\">\n            <strong className=\"me-auto\">اطلاعیه</strong>\n          </Toast.Header>\n          <Toast.Body>{toastMessage}</Toast.Body>\n        </Toast>\n      </ToastContainer>\n    </Container>\n  );\n};\n\nexport default Dashboard;","import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../context/AuthContext\";\nimport axios from \"axios\";\n\nconst ConversationPage = () => {\n  const { conversationId } = useParams();\n  const { user } = useAuth();\n  const navigate = useNavigate();\n  \n  const [conversation, setConversation] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [messageInput, setMessageInput] = useState(\"\");\n  const [sending, setSending] = useState(false);\n  \n  useEffect(() => {\n    // Check if user is authenticated\n    if (!user) {\n      navigate(\"/login\");\n      return;\n    }\n    \n    // Fetch conversation details and check access\n    const fetchConversation = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(`http://localhost:8000/api/conversations/${conversationId}`);\n        \n        // Check if user has access to this conversation\n        if (response.data.userId !== user.id && !response.data.isPublic) {\n          setError(\"You do not have access to this conversation\");\n          navigate(\"/\");\n          return;\n        }\n        \n        setConversation(response.data);\n        setError(null);\n      } catch (err) {\n        console.error(\"Error fetching conversation:\", err);\n        setError(\"Failed to load conversation\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchConversation();\n  }, [conversationId, user, navigate]);\n  \n  const sendMessage = async (e) => {\n    e.preventDefault();\n    if (!messageInput.trim()) return;\n    \n    try {\n      setSending(true);\n      const response = await axios.post(`http://localhost:8000/api/conversations/${conversationId}/messages`, {\n        content: messageInput,\n        senderId: user.id\n      });\n      \n      // Update the local conversation with the new message\n      const newMessage = response.data;\n      setConversation(prev => ({\n        ...prev,\n        messages: [...prev.messages, newMessage]\n      }));\n      \n      // Clear the input\n      setMessageInput(\"\");\n    } catch (err) {\n      console.error(\"Error sending message:\", err);\n      setError(\"Failed to send message\");\n    } finally {\n      setSending(false);\n    }\n  };\n  \n  if (loading) {\n    return <div className=\"container mt-5\"><p>Loading conversation...</p></div>;\n  }\n  \n  if (error) {\n    return <div className=\"container mt-5\"><p className=\"text-danger\">{error}</p></div>;\n  }\n  \n  if (!conversation) {\n    return <div className=\"container mt-5\"><p>Conversation not found</p></div>;\n  }\n  \n  return (\n    <div className=\"container mt-4\">\n      <h2>{conversation.title}</h2>\n      <div className=\"card mt-3\">\n        <div className=\"card-body\">\n          {conversation.messages && conversation.messages.map((message, index) => (\n            <div key={index} className={`message ${message.sender === user.id ? \"sent\" : \"received\"}`}>\n              <p>{message.content}</p>\n              <small>{new Date(message.timestamp).toLocaleString()}</small>\n            </div>\n          ))}\n        </div>\n      </div>\n      \n      <div className=\"mt-4\">\n        <form onSubmit={sendMessage}>\n          <div className=\"input-group\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Type your message...\"\n              value={messageInput}\n              onChange={(e) => setMessageInput(e.target.value)}\n              disabled={sending}\n            />\n            <button \n              type=\"submit\" \n              className=\"btn btn-primary\" \n              disabled={sending || !messageInput.trim()}\n            >\n              {sending ? \"Sending...\" : \"Send\"}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ConversationPage;","// src/components/PrivateRoute.js\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\n\nconst PrivateRoute = ({ children }) => {\n  const { user } = useAuth();\n  return user ? children : <Navigate to=\"/login\" />;\n};\n\nexport default PrivateRoute;","import './App.css';\n\n// src/App.js\nimport React from 'react';\nimport { HashRouter as Router, Route, Routes } from 'react-router-dom';\nimport { AuthProvider } from './context/AuthContext';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport Dashboard from './components/Dashboard';\nimport Conversation from './components/ConversationPage';\nimport PrivateRoute from './components/PrivateRoute';\n\nfunction App() {\n  return (\n    <Router> {/* Changed to HashRouter */}\n      <AuthProvider>\n        <Routes>\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/signup\" element={<Signup />} />\n          <Route\n            path=\"/\"\n            element={\n              <PrivateRoute>\n                <Dashboard />\n              </PrivateRoute>\n            }\n          />\n          <Route\n            path=\"/conversation\"\n            element={\n              <PrivateRoute>\n                <Conversation />\n              </PrivateRoute>\n            }\n          />\n        </Routes>\n      </AuthProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}